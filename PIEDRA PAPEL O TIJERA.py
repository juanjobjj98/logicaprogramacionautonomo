
import random  # Importamos la biblioteca que nos permite generar elecciones aleatorias.

# Definimos una lista en la variable "opciones" que el jugador podr√° escoger.
# Cada item entre comillas representa una opci√≥n.
opciones = ["Piedra", "Papel", "Tijera"]  

# Se define la funci√≥n "evaluar_resultado" con las variables "jugador" y "computadora" donde vamos a realizar los,
# condicionales con los operadores l√≥gicos que nos permitir√°n procesar los resultados,
# Indic√°ndonos si el jugador gana, pierde o empata, devolviendonos un mensaje con el resultado del juego,
# que nos servir√° posteriormente para comparar resultados y presesntarlos. 
def evaluar_resultado(jugador, computadora): 

    if jugador == computadora: # Se establece condicional if con el operador racional de igualdad "==".
        return "Empate"  #En caso de cumplirse la igualdad del condicional determina empate.
        #Para elif se establecen condiciones mediante el operador l√≥gico "and" Y "or" que se deben cumplir para que el jugador gane, tomando 
        #los elementos de piedra papel o tijera de acuerdo a su posici√≥n en la lista iniciando por "0" que ser√≠a Piedra, "1" que ser√≠a
        #Papel y "2" que ser√≠a tijera.
    elif (jugador == 0 and computadora == 2) or \
         (jugador == 1 and computadora == 0) or \
         (jugador == 2 and computadora == 1):  
        return "Ganaste" #En caso que no se cumpla el if y se cumpla una de estas condiciones nos devuelve que ganamos.
    else:
        return "Perdiste" #Sino se cumplen ni el if ni los elif nos devuelve que perdimos.

# Iniciamos un bucle while true que nos permitir√° mantenernos dentro del juego hasta seleccionar la opci√≥n para salir.
while True:
    
    print("\n JUEGO DE PIEDRA, PAPEL O TIJERA ") #Mostramos al jugador el nombre del juego
    print("\nElige una opci√≥n:") #Desplegamos el men√∫ del juego con sus opciones.
    print("1. Piedra")
    print("2. Papel")
    print("3. Tijera")
    print("4. Salir del juego")

    # Utilizamos el bloque try para manejar los errores que podr√≠an suceder.
    try:
        jugador_eleccion = int(input("\nIngresa tu elecci√≥n del (1-4): ")) #Declaramos una variable entera para que el jugador ingrese una opci√≥n.
    except ValueError:  # En caso que no ingrese un valor v√°lido nos indicar√°.
        print("‚ö†Ô∏è Por favor, ingresa un n√∫mero v√°lido (1-4).")
        continue # Una vez que nos indica "continue" har√° que el se reinicie el bucle.

    # Verificamos si el jugador eligi√≥ salir.
    if jugador_eleccion == 4: #Verificamos si el jugador ingres√≥ la opci√≥n la 4.
        print("üëã ¬°Gracias por jugar! Hasta luego.")
        break #Se utiliza la funci√≥n break para salir anticipadamente del bucle.

    # Validamos si la elecci√≥n es v√°lida (1, 2, o 3).
    if not (1 <= jugador_eleccion <= 3):  # Uso de operador l√≥gico para validar rango.
        print("‚ö†Ô∏è Opci√≥n no v√°lida. Intenta de nuevo.")
        continue #Volvemos a iniciar el bucle

    # Como en una lista la primera posici√≥n es cero hay que restar 1 para que no se vea afectada la elecci√≥n del jugador
    jugador_eleccion -= 1

    # La computadora elige aleatoriamente.
    computadora_eleccion = random.randint(0, 2) #Se crea la variable random en la cual se almacena una opci√≥n aleatoria de la lista que puede
    #Ser 0=Piedra, 1=Papel, 2=Tijera.

    # Mostramos las elecciones del jugador y de la computadora
    print(f"\nTu elecci√≥n: {opciones[jugador_eleccion]}") #Usamos f/strings para concatenar el print.
    print(f"\nElecci√≥n de la computadora: {opciones[computadora_eleccion]}")

    # Llamamos a la funcion evualuar_resultado con los argumentos de la elecci√≥n del jugador y la respuesta aleatoria de la computadora
    # Y lo guardamos en la variable resultado 
    resultado = evaluar_resultado(jugador_eleccion, computadora_eleccion)

    # Evaluamos con condicionales la variable resultado y la comparamos para imprimir los mensajes.
    if resultado == "Empate":
        print("ü§ù Resultado: ¬°Es un empate!")
    elif resultado == "Ganaste":
        print("üéâ Resultado: ¬°Haz Ganado!")
    else:
        print("üòû Resultado: Perdiste")

    # Explicamos el resultado para quienes no tienen claras las reglas del juego a trav√©s de condicionales y operadores racionales.
    if jugador_eleccion == 0 and computadora_eleccion == 2:
        print("‚úîÔ∏è La Piedra rompe a la Tijera")
    elif jugador_eleccion == 1 and computadora_eleccion == 0:
        print("‚úîÔ∏è El Papel cubre a la Piedra")
    elif jugador_eleccion == 2 and computadora_eleccion == 1:
        print("‚úîÔ∏è la Tijera corta el Papel")
    elif computadora_eleccion == 0 and jugador_eleccion == 2:
        print("‚ùå La Piedra rompe a la Tijera")
    elif computadora_eleccion == 1 and jugador_eleccion == 0:
        print("‚ùå El Papel cubre a la Piedra")
    elif computadora_eleccion == 2 and jugador_eleccion == 1:
        print("‚ùå La Tijera corta el Papel")
